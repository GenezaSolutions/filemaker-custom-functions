/**
 * =====================================================
 * Dirname ( path )
 * 
 * PURPOSE:
 *    Return the parent folder of the supplied path
 * PARAMETERS:
 *    path = (string)
 * RETURNS:
 *    (string) path to parent folder
 * DEPENDENCIES:
 *    none
 * NOTES:
 *    This function does not query to operating system
 *    to determine whether the path is a file or folder
 *    it can only use information within the path - such
 *    as the existence of a trailing path separator
 * =====================================================
 * 
 */

Let(
  [
    _separatorMac = PatternCount( _path; "/" );
    _separatorWin = PatternCount( _path; "\\" );

    _separator = Case(
      _separatorMac > 0;
      "/";
    // Else
      "\\"
    );
    
    _lastCharIsSeparator = Right( _path; 1 ) = _separator;
    _pathParts           = Substitute( _path; _separator ; ¶ );
    _partCount           = ValueCount( _pathParts )
  ];

  Substitute(
    LeftValues( _pathParts; Case(
      _lastCharIsSeparator;
      _partCount;
    // Else
      _partCount - 1
    ) - 1 );
    ¶; _separator
  )
)

/*
//Unit tests
List (
  Dirname ( "/Volumes/Macintosh HD/Users/User Name/Library/Application Support/FileMaker/Extensions/" );
  Dirname ( "C:\Documents and Settings\User Name\Local Settings\Application Data\FileMaker\Extensions\\" );
  Dirname ( "C:\Users\User Name\AppData\Local\FileMaker\Extensions" );
  Dirname ( "file:Folder/Parent/Path" );
  Dirname ( "file:Folder/Parent/Path/" );
  Dirname ( "file:/LightSpeed/Users/matt/Dropbox/Transfer/FMP Standards/Standards.fp7" );
)
*/
