// Returns the arabic equivalent of the passed Roman numeral. Based on fuction
//   found at http://www.briandunning.com/cf/85.  It will return correct values
//   for both correctly and incorrectly formed roman numberals, and ignore all
//   characters other than “i”, “v”, “x”, “l”, “c”, “d”, and “m”.
//
// Written by Jeremy Bante

Let(
  Normalized = Lower( _roman ); //normalize RomanNum to lowercase

  //tally values for letters
  ( PatternCount( Normalized; "i" ) * 1) +
  ( PatternCount( Normalized; "v" ) * 5) +
  ( PatternCount( Normalized; "x" ) * 10) +
  ( PatternCount( Normalized; "l" ) * 50) +
  ( PatternCount( Normalized; "c" ) * 100) +
  ( PatternCount( Normalized; "d" ) * 500) +
  ( PatternCount( Normalized; "m" ) * 1000) -


  //subtract for complex values
  // ( i + v ) - iv = ( 1 + 5 ) - 4 = 2
  ( PatternCount( Normalized; "iv" ) * 2) -
  // ( i + x ) - ix = ( 1 + 10 ) - 9 = 2
  ( PatternCount( Normalized; "ix" ) * 2) -
  // ( x + l ) - xl = ( 10 + 50 ) - 40 = 20
  ( PatternCount( Normalized; "xl" ) * 20) -
  // ( x + c ) - xc = ( 10 + 100 ) - 90 = 20
  ( PatternCount( Normalized; "xc" ) * 20) -
  // ( c + d ) - cd = ( 100 + 500 ) - ( 400 ) = 200
  ( PatternCount( Normalized; "cd" ) * 200) -
  // ( c + m ) - cm = ( 100 + 1000 ) - 900 = 200
  ( PatternCount( Normalized; "cm" ) * 200)
)
