// lsts.QuickSort ( _list )
//
// Purpose:		Sorts list with the popular and reasonably efficient quicksort algorithm
//
// Parameters:		_list: The list to sort.
//
// Requirements:	lsts.ValuesLessThanOrEqual
//				lsts.ValuesGreaterThan
//				lsts.Rest
//
// Author:			Jeremy Bante
// Version:		1.0 written 15-03-11
//
// Note:			*Values functions append a return to the last item in the list. The List function, which
//				seems to be more commonly used, does not. Therefore this function accounts for this
//				by lopping off the last character when necessary. Therefore this wrapper is used once
//				the list has actually been sorted.
//
// Example:
// lsts.QuickSort ( List ( "one"; "two"; "three"; "four" ) ) = "four¶one¶three¶two"

Let (
  [
    _sorted	= lsts.QuickSort_ ( _list );
    _len	= Length ( _sorted );
    _result 	= Left ( _sorted; _len - 1 )
  ];

  _result
)
