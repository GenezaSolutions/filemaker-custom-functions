// This function is case sensitive, but the values do not need to be
//   alphabetized, and the duplicates do not need to be next to each other. It
//   will leave the list in the order it received it, minus any duplicates.
//
// Created by Andrew Persons, http://www.briandunning.com/cf/492

Let (
  [
    _value = LeftValues( _list; 1 );
    _count = ValueCount( _list );

    _newList = Replace(
      Substitute(
        "¶" & _list & "¶";
        [ "¶";          "¶|" ];
        [ "|" & _value; devp.Nil ];
        [ "|";          devp.Nil ]
      );
      1;
      1;
      devp.Nil
    )
  ];

  Case(
    _count > 0;
    _value & lsts.RemoveDuplicates( Replace( _newList; Length( _newList ); 1; devp.Nil ) )
  )
)
