/*
 * =====================================================
 * VariableList( keys; values; scope )
 * 
 * RETURNS:
 *    (string) key/value pairs as $key = value in
 *    positional order
 *
 * PARAMETERS:
 *    @keys = List() of key names
 *    @values = List() of values
 *    @scope = (enum) global, local
 *
 * DEPENDENCIES:
 *    none
 *
 * PURPOSE:
 *    Takes two compliment set of lists
 *    and turns them into FMP defined variables
 *
 * NOTES:
 *    none
 * =====================================================
 *
 */
 
Let(
  [
    _keyCount      = ValueCount( _keys );
    _valueCount    = ValueCount( _values );
    
    _singleValue   = ( _keyCount = 1 ) and ( _valueCount = 1 ); // only one key/value pair
    _isValid       = _keyCount = _valueCount; // both lists have the same number of values
    _notEmpty      = ( not IsEmpty( _keys ) ) and ( not IsEmpty( _values ) ); // lists aren't empty
    _value         = GetValue( _values ; 1 );

    _value = Case(
      nump.IsNumber( _value );
      _value;
    // Else
      Quote( _value ) // default for all strings
    );

    _string = Case(
      _scope = "global";
      "$$";
    // Else
      "$"
    ) & GetValue( _keys; 1 ) & " = " & _value & Case(
      _keyCount = 1;
      "";
    // Else
      ";¶"
    )
  ];

  Case (
    _singleValue;
    _string;

    _isValid and _notEmpty;
    _string & devp.VariableList(
      lsts.RestOfList( _keys );
      lsts.RestOfList( _values );
      _scope
    );

    // default
    "ERROR » Lists don't match in length"
  )
)

/*
// Testing code
_list (
  List(
    "foo";
    "bar"
  )
;
  List(
    "single value";
    "multiple¶values"
  )
; "local" )
*/
