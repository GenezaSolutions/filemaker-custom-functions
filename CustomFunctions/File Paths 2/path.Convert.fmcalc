Let(
  [
    _path_type		= path.Type( _path );
    _posix			= path.ConvertToPOSIX( _path );
    _list			= path.List( _posix );
    _path_protocol	= path.Protocol( path.Type( _path ) );      
    _targ_protocol	= path.Protocol( _type );
    _volume_pos		= lsts.ItemPosition( "Volumes"; _list );
    _no_volume		= RightValues( _list; ValueCount( _list ) - _volume_pos );
    _separator		= path.Separator( _type );
    _unescaped		= Substitute( _list; "\ "; " " );

    _result = Case(
      _path_type = _type;					_path;
      _type = path.TypePOSIX;				_posix;
      path.TypeIsFileMaker( _path_type )
        and path.TypeIsFileMaker( _type );		Substitute( _path; _path_protocol; _targ_protocol );
      Substitute( _unescaped; Â¶; _separator )
    )
  ];

  _result
)
