// repf.OmitTrailingNull_ ( _repeating_field; _repetition_max; _repetition; _max_values )
//
// Purpose:		Return a carriage-return-delimited list of the value in each repetition of a field,
//				including nulls, but excluding any nulls that follow the last non-null value.
//
// Parameters:		_repeating_field:	Pass the field itself (as if passing the field value), not using
//								GetFieldName, because the custom function engine will interpret
//								the parameter as a reference.
//              		_repetition_max:	The maximum number of repetitions to process. Function could
//								exit earlier, though, if it determines that all non-null values have
//								been processed.
//				_repetition:		The number of repetitions processed thus far. Increments following
//								each recursive call to the function.
//				_max_values:		A decreasing counter of the non-null values remaining to be
//								processed. Set by parent function to the total non-null values in
//								the repeating field. Decrements following each non-null value
//								processed.
//
// Requirements: 	devp.Nil
//
// Author:			Will M. Baker
// Version:		1.0 written 11-10-29
//
// Notes:			http://buzz.beezwax.net/2011/10/29/working-with-repeating-fields
//
// Example:
// // Assuming a repeating field with 5 repetitions with "apple", "orange", "", "pear", ""...
// rept.OmitTrailingNulls_ ( repeating_field; 5; 1; 5 ) = "apple¶orange¶¶pear"

Case (
  ( _repetition > _repetition_max )
    or ( _max_values = 0 );
  devp.Nil;

  Let (
    [
      _value = GetRepetition ( _repeating_field; _repetition );
      _max_values = Case (
        IsEmpty ( _value );	_max_values;
					_max_values - 1
      );

      _result = Case (
        _repetition = 1;		devp.Nil;
      					¶
      );

      _result = _result & _value &
        rept.OmitTrailingNulls_ ( _repeating_field; _repetition_max; _repetition + 1; _max_values )
    ];

    _result
  )
)
