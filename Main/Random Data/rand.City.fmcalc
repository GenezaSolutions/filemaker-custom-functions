// rand.City ( _state )
//
// Purpose:		Returns the name of a city from the state specified by the parameter.
//
// Parameters:		_state:	either a state abbreviation or a state name
//
// Requirements: 	rand.State
//
// Author:			Charles Ross
// Version:		1.0 written 15-05-22
//
// Notes:			The data includes the 294 cities in the United States with a population of at least
//				100,000 on July 1, 2013 plus a few cities with smaller populations from Delaware,
//				Maine, Vermont, West Virginia and Wyoming, since those states don't have any
//				100,000+ cities. The data was taken on 10/15/14
//				from http://en.wikipedia.org/wiki/List_of_United_States_cities_by_population.
//
//				If no state is given a random selection is chosen from all cities in the data.CitiesDict
//				function.
//
//				If an invalid state name or state code (abbreviation) was specified, the result will be
//				blank
//
//				Inspired by Mislav Kos
//
// Example:
// // If run enough times, the random result could beâ€¦
// lsts.IsMember ( rand.City ( "IL" ); dict.Get ( data.CitiesDict; "Illinois" ) )

Let (
  [
    _cities = Case (
      IsEmpty ( _state );	dict.Values ( data.CitiesDict );
					dict.Get ( data.CitiesDict; _state )
    );

    // If no list was returned, try looking up by abbreviation instead of state name.
    _cities = Case (
      ValueCount ( _cities ) > 0;	_cities;
						Let (
						  [
						    _abbrev_dict	= dict.Reverse ( data.StatesDict );
						    _state		= dict.Get ( _abbrev_dict; _state )
						  ];
						  dict.Get ( data.CitiesDict; _state )
						)
    );

    _city	= rand.ListItem ( _cities )
  ] ; 	

  _city
)
