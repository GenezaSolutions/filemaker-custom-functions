// rang.ListToRanges_ ( _list; _i )
//
// Purpose:		Converts a list of dates (assumed to be sorted in ascending order) to a list of ranges of
//				dates.
//
// Parameters:		_list:	The list of dates to convert.
//
// Requirements: 	requirements
//
// Author:			Charles Ross
// Version:		1.0 written 15-03-08
//
// Notes:			Store the index of the last item.
//				Start with the first item in the list with an appended separator.
//				If we've reached the last item in the list, append it as the end of the last range and exit.
//				If the current item is one more than the last item, make the current item the last item
//					and move forward by one item in the list.
//				If the current item is more than one more than the last item, close the range with the
//					last item create the start of a new range
//
// Todo:			See if this can be simplified using the example that's commented out.
//
// Example:
// sample = result

Let (
  [
    _last_item = GetAsDate ( GetValue ( _list; _i ) );
    _curr_item = GetAsDate ( GetValue ( _list; _i + 1 ) );
    _diff = _curr_item - _last_item;

/* I think this simplified version here is the same as the case statement that is enabled, but it isn't returning
    the same result. Need to investigate.
    $_list_to_ranges_result = $_list_to_ranges_result & Case(
      ValueCount ( _list ) = _i;
      _last_item & "¶";

      _diff = 1;
      lsts.ListToRanges_ ( _list; _i + 1 );

      _last_item & "¶" & _curr_item & lsts.RangeSeparator & lsts.ListToRanges_ ( _list; _i + 1 )
    )
*/

    _ = Case (
      ValueCount ( _list ) = _i;
      Let ( $_list_to_ranges_result = $_list_to_ranges_result & GetValue ( _list; _i ) & ¶; devp.Nil );

      Let (
        [
          _ = Case (
            _diff = 1;
            rang.ListToRanges_ ( _list; _i + 1 );

            Let ( $_list_to_ranges_result = $_list_to_ranges_result & GetValue ( _list; _i )
              & "¶" & GetValue ( _list; _i + 1 ) & rang.Separator; rang.ListToRanges_ ( _list; _i + 1 ) )
          )
        ];

        ""
      )
    )
  ];

  ""
)
