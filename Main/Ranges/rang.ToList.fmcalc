// rang.ToList ( _ranges )
//
// Purpose:		Takes a list of ranges and converts that to a list of the items.
//
// Parameters:		_ranges:	A list of ranges
//
// Requirements: 	lsts.First
//				lsts.Rest
//				rang.Dates
//
// Author:			Charles Ross
// Version:		1.0 written 15-03-06
//
// Notes:			Currently this is written to explicitly work with dates.
//
// Todo:			Look for a way to generalize this so that dates and numbers work equally well.
//
// Example:
// rang.ToList ( Date ( 1; 1; 2015 ) & rang.Separator & Date ( 1; 5; 2015 ) ) =
//   "1/1/2015¶1/2/2015¶1/3/2015¶1/4/2015¶1/5/2015"


Case (
  ValueCount ( _ranges ) = 0;
  devp.Nil;

  Let (
    [
      _range	= lsts.First ( _ranges );
      _rest		= lsts.Rest ( _ranges );

      _range_list	= Substitute ( _range; rang.Separator; "¶" );
      _earlier	= GetValue ( _range_list; 1 );
      _later		= GetValue ( _range_list; 2 );

      _date_list = rang.Dates ( _earlier; _later ) & "¶" & rang.ToList ( _rest )
    ];

    Left ( _date_list; Length ( _date_list ) - 1 )
  )
)
