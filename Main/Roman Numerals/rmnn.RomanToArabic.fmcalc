// rmnn.RomanToArabic ( _roman )
//
// Purpose:		Returns the arabic equivalent of the roman numeral.
//
// Parameters:		_roman:	The roman numeral to convert.
//
// Author:			Jeremy Bante
// Version:		1.0 written 15-03-11
//
// Notes:			http://www.briandunning.com/cf/85
//
// Example:
// sample = result

Let(
  [
    _normalized = Lower( _roman ) //normalize RomanNum to lowercase
  ];

  //tally values for letters
  ( PatternCount( _normalized; "i" ) * 1) +
  ( PatternCount( _normalized; "v" ) * 5) +
  ( PatternCount( _normalized; "x" ) * 10) +
  ( PatternCount( _normalized; "l" ) * 50) +
  ( PatternCount( _normalized; "c" ) * 100) +
  ( PatternCount( _normalized; "d" ) * 500) +
  ( PatternCount( _normalized; "m" ) * 1000) -


  //subtract for complex values
  // ( i + v ) - iv = ( 1 + 5 ) - 4 = 2
  ( PatternCount( _normalized; "iv" ) * 2) -
  // ( i + x ) - ix = ( 1 + 10 ) - 9 = 2
  ( PatternCount( _normalized; "ix" ) * 2) -
  // ( x + l ) - xl = ( 10 + 50 ) - 40 = 20
  ( PatternCount( _normalized; "xl" ) * 20) -
  // ( x + c ) - xc = ( 10 + 100 ) - 90 = 20
  ( PatternCount( _normalized; "xc" ) * 20) -
  // ( c + d ) - cd = ( 100 + 500 ) - ( 400 ) = 200
  ( PatternCount( _normalized; "cd" ) * 200) -
  // ( c + m ) - cm = ( 100 + 1000 ) - 900 = 200
  ( PatternCount( _normalized; "cm" ) * 200)
)
